// Code Started For Bar Chart
// Below code is to generate dummy data for the Bar Chart
var generateData = function(n, floor){
        var data = [],
            p = (Math.random() *  11) + 1,
            i;
        var actions = ["CLOSED","OVERDUE","DUE","APPROVAL WAITING","NOT DUE","IN SCOPE"]    
        floor = (!floor && floor !== 0)? 20 : floor;
        
        for (i = 0; i < (6); i++) {
		
            data.push({
				
                name1: actions[i],
				scope1:'Scope',
				Scope:((100*((i+1)/2))+i),
				scope2:'No Scope',
				NoScope:((100*((i+1)/2))+i)
				
            });
        }
        return data;
    };
// Below code is to create a store which will have the dummy data generated by generateData()
var store1 = Ext.create('Ext.data.JsonStore', {
        fields: ['name1', 'scope1', 'Scope','scope2','NoScope'],
        data: generateData()
    });
// Below code is to create a bar chart
var colors = ['url(#v-1)',
                  'url(#v-2)',
                  'url(#v-3)',
                  'url(#v-4)',
                  'url(#v-5)',
				  'url(#v-6)',
				  'url(#v-7)',
				  'url(#v-8)',
				  'url(#v-9)',
				  'url(#v-10)',
				  'url(#v-11)',
				  'url(#v-12)'];
    
    var baseColor = '#eee';
    
    Ext.define('Ext.ux.chart.theme.Fancy', {
        extend: 'Ext.chart.theme.Base',
        
        constructor: function(config) {
            this.callParent([Ext.apply({
                axis: {
                    fill: baseColor,
                    stroke: baseColor
                },
                axisLabelLeft: {
                    fill: baseColor
                },
                axisLabelBottom: {
                    fill: baseColor
                },
                axisTitleLeft: {
                    fill: baseColor
                },
                axisTitleBottom: {
                    fill: baseColor
                },
                colors: colors
            }, config)]);
        }
    }, function(){
        Ext.chart.theme.Fancy = Ext.ux.chart.theme.Fancy;
    });

var colors1 = ['url(#v-1)',
                  'url(#v-2)',
                  'url(#v-3)',
                  'url(#v-4)',
                  'url(#v-5)',
				  'url(#v-6)',
				  'url(#v-7)',
				  'url(#v-8)',
				  'url(#v-9)',
				  'url(#v-10)'];
    
    var baseColor1 = '#eee';
    
 
 var chart = Ext.create('Ext.chart.Chart', {
            id: 'chartCmp',
            xtype: 'chart',
			style: 'background:#fff',
            animate: {
                easing: 'bounceOut',
                duration: 750
            },
            shadow: true,
            store: store1,
			gradients: [
            {
                'id': 'v-1',
                'angle': 0,
                stops: {
                    0: {
                        color: '#0B6121'
                    },
                    100: {
                        color: '#0B6121'
                    }
                }
            },
            {
                'id': 'v-2',
                'angle': 0,
                stops: {
                    0: {
                        color: '#04B431'
                    },
                    100: {
                        color: '#04B431'
                    }
                }
            },
            {
                'id': 'v-3',
                'angle': 0,
                stops: {
                    0: {
                        color: '#DF0101'
                    },
                    100: {
                        color: '#DF0101'
                    }
                }
            },
            {
                'id': 'v-4',
                'angle': 0,
                stops: {
                    0: {
                        color: '#FE2E2E'
                    },
                    100: {
                        color: '#FE2E2E'
                    }
                }
            },
            {
                'id': 'v-5',
                'angle': 0,
                stops: {
                    0: {
                        color: '#DF7401'
                    },
                    100: {
                        color: '#DF7401'
                    }
                }
            },{
                'id': 'v-6',
                'angle': 0,
                stops: {
                    0: {
                        color: '#FE9A2E'
                    },
                    100: {
                        color: '#FE9A2E'
                    }
                }
            },{
                'id': 'v-7',
                'angle': 0,
                stops: {
                    0: {
                        color: '#FFFF00'
                    },
                    100: {
                        color: '#FFFF00'
                    }
                }
            },{
                'id': 'v-8',
                'angle': 0,
                stops: {
                    0: {
                        color: '#F3F781'
                    },
                    100: {
                        color: '#F3F781'
                    }
                }
            },{
                'id': 'v-9',
                'angle': 0,
                stops: {
                    0: {
                        color: '#ECF8E0'
                    },
                    100: {
                        color: '#ECF8E0'
                    }
                }
            },{
                'id': 'v-10',
                'angle': 0,
                stops: {
                    0: {
                        color: '#FAFAFA'
                    },
                    100: {
                        color: '#FAFAFA'
                    }
                }
            },{
                'id': 'v-11',
                'angle': 0,
                stops: {
                    0: {
                        color: '#08298A'
                    },
                    100: {
                        color: '#08298A'
                    }
                }
            },{
                'id': 'v-12',
                'angle': 0,
                stops: {
                    0: {
                        color: '#58ACFA'
                    },
                    100: {
                        color: '#58ACFA'
                    }
                }
            }],
			
            axes: [{
                type: 'Numeric',
                position: 'left',
                fields: ['Scope','NoScope'],
                label: {
                    renderer: Ext.util.Format.numberRenderer('0,0')
                },
                title: 'Level Values',
                grid: false,
                minimum: 0
            }, {
                type: 'Category',
                position: 'bottom',
                fields: ['name1'],
                title: 'My Action Items'
            }],
            series: [{
                type: 'column',
                axis: 'left',
                highlight: true,
				xField: 'name1',
				listeners:
				{
					itemclick: function(e, opts)
					{
						var filterValue = e.value[0].toLowerCase().trim();
						store.clearFilter(true);
						store.filter(
							{property:'status',value:filterValue.toString()}
						)
					}
				},
                yField: ['Scope','NoScope'],
                tips: {
                  trackMouse: true,
                  width: 100,
                  height:40,
                  renderer: function(storeItem, item) {
					
					var scope = '';
						if(item["yField"]=='Scope')
							scope = 'scope1'
						else
							scope = 'scope2'
                    this.setTitle(storeItem.get(scope) + ': ' + storeItem.get(item["yField"]));
                  }
                },
                label: {
                  display: 'insideEnd',
                  'text-anchor': 'middle',
                    field: ['Scope','NoScope'],
                    renderer: Ext.util.Format.numberRenderer('0'),
                    orientation: 'vertical',
					fill: '#fff',
                    color: '#333'
                },
				renderer: function(sprite, storeItem, barAttr, i, store) {
					
                    barAttr.fill = colors[i % colors.length];
                    return barAttr;
                },
                xField: 'name1',
                yField: ['Scope','NoScope']
            }]
        });

var catStore = Ext.create('Ext.data.JsonStore', {
        fields: ['categoryName', 'CLOSED', 'OVERDUE', 'DUE', 'APPROVALWAITING','NOTDUE','INSCOPE'],
        data: [
                {categoryName: 'TIL', CLOSED: 20, OVERDUE: 50, DUE: 50, APPROVALWAITING: 60,NOTDUE:30,INSCOPE:75},
                {categoryName: 'ECN', CLOSED: 30, OVERDUE: 60, DUE: 50, APPROVALWAITING: 30,NOTDUE:30,INSCOPE:25},
                {categoryName: 'HOTLIST', CLOSED: 40, OVERDUE: 80, DUE: 40, APPROVALWAITING: 60,NOTDUE:20,INSCOPE:35},
                {categoryName: 'ETC', CLOSED: 50, OVERDUE: 100, DUE: 50, APPROVALWAITING: 40,NOTDUE:30,INSCOPE:45},
				{categoryName: 'STD SCOPE', CLOSED: 30, OVERDUE: 30, DUE: 60, APPROVALWAITING: 60,NOTDUE:60,INSCOPE:55},
				{categoryName: 'PAC', CLOSED: 20, OVERDUE: 40, DUE: 50, APPROVALWAITING: 50,NOTDUE:30,INSCOPE:75},
				{categoryName: 'WARRANTY', CLOSED: 10, OVERDUE: 30, DUE: 90, APPROVALWAITING: 60,NOTDUE:80,INSCOPE:65},
				{categoryName: 'TOP ISSUE', CLOSED: 50, OVERDUE: 100, DUE: 50, APPROVALWAITING: 70,NOTDUE:30,INSCOPE:75}
              ]
    });		
var catChart =  Ext.create('Ext.chart.Chart',{
			id: 'catChartCmp',
            xtype: 'chart',
			style: 'background:#fff',
			//theme: 'Fancy1',
            animate: {
                easing: 'bounceOut',
                duration: 750
            },
            shadow: true,
            store: catStore,
			
            legend: {
                position: 'bottom'
            },
            axes: [{
                type: 'Numeric',
                position: 'left',
                fields: ['CLOSED', 'OVERDUE', 'DUE', 'APPROVALWAITING','NOTDUE','INSCOPE'],
                title: 'Level Values',
                grid: false
            }, {
                type: 'Category',
                position: 'bottom',
                fields: ['categoryName'],
                title: 'Category'
            }],
            series: [{
                type: 'column',
                axis: 'left',
                xField: 'categoryName',
                yField: ['CLOSED', 'OVERDUE', 'DUE', 'APPROVALWAITING','NOTDUE','INSCOPE'],
                stacked: true,
				 label: {
                  
                    orientation: 'horizontal'
                }
				/*,
                tips: {
                    trackMouse: true,
                    width: 65,
                    height: 28,
                    renderer: function(storeItem, item) {
                        this.setTitle(String(item.value[0]));
                    }
                }*/
            }]
        });

// Code End For Bar Chart

// Code Starts for Right Site Collapsible Panel
//======= MY SHORTCUT PANEL ==========

 var myShortcutsPanel = Ext.create('Ext.Panel', {
                //title: 'My Shortcuts',
				frame:false,
				border:false,
				height:140,
				bodyCls:'myShortcutPanelCls',
				html:'<div class="mainShortcutDiv">'+
						'<div class="myShortcut" ><p class="h-class">MY SHORTCUTS</p></div>'+
							' <img src="resources/images/white_expand_arrow_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showShortcut(this.innerHTML);">Ts & Cs</u><br/>'+
							' <img src="resources/images/white_expand_arrow_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showShortcut(this.innerHTML);">CBM</u><br/>'+
							' <img src="resources/images/white_expand_arrow_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showShortcut(this.innerHTML);">Invoice</u><br/>'+
							' <img src="resources/images/white_expand_arrow_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showShortcut(this.innerHTML);">Quick Note</u><br/>'+
							
							'<br/>'+
							
					 '</div>'
            });
function showShortcut(input)
{
	
	if(input.toString().trim()=="Ts &amp; Cs")
	{
		window.open('http://qa.energy.ge.com/pgsapps/tncdatabase/pages/Home.jsf','_tab')
	}
	else if(input.toUpperCase().trim()=="CBM")
	{
		window.open('http://qa.energy.ge.com/pgsapps/pgscbmo/ui/login/login.jsf','_tab')
	}
	else if(input.toUpperCase().trim()=="INVOICE")
	{
		Ext.Msg.alert("Alert","It will navigate to Invoice Screen.");
	}
	else if(input.toUpperCase().trim()=="QUICK NOTE")
	{
		Ext.Msg.alert("Alert","It will navigate to Qick Note screen.");
	}
}
//======= WHAT'S HAPPENING PANEL =========
var whatsHappeningPanel = Ext.create('Ext.Panel', {
                title: 'WHAT\'S HAPPENING',
				frame:false,
				id:'whatHappPnl',
				border:false,
                height: 140,
				bodyStyle:'background-color:#3b3b36; color: #DCDBD6; font-family:"GEInspiraPitch", Arial, Helvetica;',
				html:'<div>'+
						'<p></p>'+
							' <img src="resources/images/events_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showHappening(this.innerHTML);">Testing1</u><br/>'+
							' <img src="resources/images/events_icon.png" height="16" width="16"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u style="cursor: pointer;" onClick="showHappening(this.innerHTML);">Testing</u><br/>'+
							'<br/>'+
							'<a style="color:rgb(9, 165, 222);" id="dashBoardLnk" href="javascript:showAll();" >View All</a> &nbsp;&nbsp; <img src="resources/images/view_all_arrow.png" height="10" width="10">'+
					 '</div>'
            });
function showHappening(val)
{
	Ext.Msg.alert("Alert","There is no URL specified to this Message Description.");
}

//========= RECENT ACTIVITY (MY LINK) =========
var recentActivity = Ext.create('Ext.Panel', {
                title: 'Recent Activity',
				id:'recentActivityPanel',
				bodyStyle:'background-color:#3b3b36; color: #DCDBD6; font-family:GEInspiraMedium , Arial, Helvetica; !important',
				html:'<div style="padding:5px 5px 5px 5px;">'+
							' <img src="resources/images/icon_project_16.png" height="16" width="16"> &nbsp;&nbsp;10000105 CONV TDI 95IT0495 - Ostiglia EL Hardware<br/>'+
							' <img src="resources/images/icon_site_16.png" height="16" width="16"> &nbsp;&nbsp;65020 Comission Federal De Electricidada<br/>'+
							' <img src="resources/images/icon_outage_16.png" height="16" width="16"> &nbsp;&nbsp;298712 Fujiarah Power and Water Plant<br/>'+
							' <img src="resources/images/icon_events_16.png" height="16" width="16"> &nbsp;&nbsp;Sabanci Center(Izmit) ENERJISA ENERJI URETIM A S - TBD003<br/>'+
							' <img src="resources/images/icon_contract_16.png" height="16" width="16"> &nbsp;&nbsp;298712 Fujiarah Power and Water Plant<br/>'+
							'<br/>'+
							'<a style="color:rgb(9, 165, 222);" id="dashBoardLnk" href="javascript:showAll();" >View All</a> &nbsp;&nbsp; <img src="resources/images/view_all_arrow.png" height="10" width="10">'+
					 '</div>'
				
            });
function showActivity(value)
{
	Ext.Msg.alert(value);
}

//======== REPORTS (MY LINK) ==========
var reports = Ext.create('Ext.Panel', {
                title: 'Reports',
				id:'reportPanel',
				bodyStyle:'background-color:#3b3b36; color: #DCDBD6; font-family:GEInspiraMedium, Arial, Helvetica;',
				html:'<div style="padding:5px 5px 5px 5px;">'+
						'</br>'+
							'<a style="color:rgb(9, 165, 222);" id="dashBoardLnk" href="javascript:showDashboard();" >Metrics & Dashboards</a> &nbsp;&nbsp; <img src="resources/images/view_all_arrow.png" height="10" width="10">'+
					 '</div>'
            });
function showDashboard(){
	window.open('http://qa.energy.ge.com/pgsapps/pgsportalreports/','_tab')
}

//========== HELP (MY LINK) ============
var help = Ext.create('Ext.Panel', {
                title: 'Help',
				height:100,
				id:'helpPanel',
				bodyStyle:'background-color:#3b3b36; color: #DCDBD6; font-family:GEInspiraMedium, Arial, Helvetica;',
				html:'<div style="padding:5px 5px 5px 5px;">'+
						'</br>'+
						'<img src="resources/images/grey_expand_arrow_icon.png" height="10" width="10"> Support Central'+
						'<br/><br/>'+
						'Raise a ticket'+'<br/><br/>'+
						'<select width="50px">'+
						  '<option value="">Please Select</option>'+
						 ' <option value="PGSDataIssue">PGS Portal - Data Issue</option>'+
						 ' <option value="PGSDefect">PGS Portal - Defect/Bug</option>'+
						 ' <option value="tc">Ts & Cs</option>'+
						 ' <option value="cbm">CBM</option>'+
						 ' <option value="performance">Performance</option>'+
						 ' <option value="request">Request (Information/Report)</option>'+
						'</select>'+
						'&nbsp;&nbsp;&nbsp;<img src="resources/images/go_button_blue.gif" height="16" width="16">'+
					 '</div>'
            });
//
	
//=========== MY LINK PANEL ===========
 var myLinkAccordion = Ext.create('Ext.Panel', {
                title: 'MY LINKS',
				plain:true,
				cssCls:'h-class',
				id:'myLinkAccPanel',
                collapsible: false,
				border:false,
				frame:false,
                split:true,
                height:350,
                layout:'accordion',
                items: [recentActivity,reports,help]
            });
// Code Ends for Right Side Collapsible Panel

// Code to create the store and selection model for Outage Grid
 var myData = [
            ['CS ERP',1006674,190,'LAKE FIELD JUNCTION STATION','297523','04-MAR-2014','28-JUN-2014','closed'],
            ['CS ERP',1050526,110,'Salalah','875065','14-FEB-2014','23-FEB-2014','overdue'],
            ['CS ERP',1054102,222,'SMITH ELECTRIC GENERATING PLANT','297515','20-DEC-2012','04-JAN-2013','due'],
            ['FS ERP',42407,,,'DUMMYTOOLESN','02-DEC-2011','02-DEC-2011','approval waiting'],
            ['FS ERP',32301,185,,'299137','05-JUN-2011','30-DEC-2012','not due'],
			['CS ERP',1006674,190,'LAKE FIELD JUNCTION STATION','297523','04-MAR-2014','28-JUN-2014','in scope'],
            ['CS ERP',1050526,110,'Salalah','875065','14-FEB-2014','23-FEB-2014','closed'],
            ['CS ERP',1054102,222,'SMITH ELECTRIC GENERATING PLANT','297515','20-DEC-2012','04-JAN-2013','closed'],
            ['FS ERP',42407,,,'DUMMYTOOLESN','02-DEC-2011','02-DEC-2011','due'],
            ['FS ERP',32301,185,,'299137','05-JUN-2011','30-DEC-2012','approval waiting']
        ];
var store = Ext.create('Ext.data.ArrayStore', {
            fields: [
               {name: 'itemQty'},
               {name: 'eventID'},
               {name: 'actionItem'},
               {name: 'siteNames'},
               {name: 'esn'},
			   {name:'plannedStartDate'},
			   {name:'plannedEndDate'},
			   {name:'status'}
            ],
            data: myData
        });


var sm = Ext.create('Ext.selection.CheckboxModel', {showHeaderCheckbox:false});
// Code ends for Outage GridPanel



// Following Code is to create the Main Tab View 
Ext.define('PGS.view.MainTabPanel',{
	extend:'Ext.panel.Panel', 
	alias:'widget.mainTabPanel',
	//layout : 'fit'
	layout: {
        type: 'vbox',
        align: 'stretch'
    },
	plain: true, // remove bg image from tabs
	initComponent: function () {

		me = this;
		
		me.items=[{
			bodyStyle:'background-color:#A59A8B',
			border:true,
			//bodyCls:'contentPanelCls',
			//height:60,
			items:[
			{
				xtype:'MainTabView',
				height:30
			},
			
			{
				xtype:'panel',
				height:680,
				frame:false,
				draggable:false,
				id:'mainPanelCls',
				layout:'border',
				defaults: {
					collapsible: true,
					split: true,
					bodyStyle: 'padding:5px;background-color:white;'
				},
				items: [{
					header:true,
					frame:false,
					title:'&nbsp;',
					id:'myShortcutsPanel',
					region:'east',
					width: 250,
					items:[myShortcutsPanel,myLinkAccordion,whatsHappeningPanel]
				},{
					//title: 'Main Content',
					xtype:'tabpanel',
					tabBar : {
						hidden :true
					},
					activeItem:0,
					bodyStyle: 'padding:5px;background-color:white;',
					header:false,
					collapsible: false,
					region:'center',
					margins: '15 15 15 15',
					tbar:[
									{ xtype: 'button', text: 'Outages', width: 100, id:'outageBtn'},'-',
									{ xtype: 'button', text: 'Sites', width: 100, id:'siteBtn'},'-'
									,
									'->',
									{ xtype: 'button',icon:'resources/images/switchView.png', id:'switchCatBtn',tooltip: {text:'Switch View'} , //text: 'Switch To Category Mode',
										handler: function(){
											if(Ext.getCmp('categoryChartPnl').hidden && !Ext.getCmp('statusChartPnl').hidden)
											{
												Ext.getCmp('statusChartPnl').setVisible(false);
												Ext.getCmp('categoryChartPnl').setVisible(true);
												//alert(Ext.getCmp('switchCatBtn').tootip.text)
												//Ext.getCmp('switchCatBtn').setText('Switch To Status Mode');
												
											}
											else if(!Ext.getCmp('categoryChartPnl').hidden && Ext.getCmp('statusChartPnl').hidden)
											{
												Ext.getCmp('statusChartPnl').setVisible(true);
												Ext.getCmp('categoryChartPnl').setVisible(false);
												//Ext.getCmp('switchCatBtn').setText('Switch To Category Mode');
											}
										}
									},'-',
									/*{ xtype: 'button',icon:'resources/images/recent_icon.png', text: '',tooltip: {text:'Recent'}},'-',
									{ xtype: 'button',icon:'resources/images/favorite_icon.png', text: '', tooltip: {text:'Favourites'} },'-',
									{ xtype: 'button',icon:'resources/images/exp_settings_icon.png', text: '', tooltip: {text:'My Preferences'} }*/
								],
					items:[
						{
								title: 'Outages',
								layout:'fit',
								itmIndex : 0,
								id:'treeViewtab',
								items:[
									{
										xtype:'panel',
										layout: 'anchor',
										items: [
												{
													xtype:'panel',
													layout:'fit',
													hidden:false,
													id:'statusChartPnl',
													width:650,
													height:240,
													items:chart
												},
												{
													xtype:'panel',
													layout:'fit',
													width:650,
													hidden:true,
													id:'categoryChartPnl',
													height:240,
													items:catChart
												},
												{
													xtype:'panel',
													height:30
												},
												{
													xtype:'gridpanel',
													frame:true,
													selModel: sm,
													height:300,
													store:store,
													autoHeight:true,
													tbar:[
														/*{ xtype: 'button', text: 'Outages', width: 100, id:'outageBtn'},'-',
														{ xtype: 'button', text: 'Sites', width: 100, id:'siteBtn'},'-',*/
														{xtype:'label',text:'My Outages',id:'myOutageLbl'},
														'->',
														{ xtype: 'button',icon:'', icon:'resources/images/Refresh-icon.png',tooltip: {text:'Refresh Grid'}, handler:
															function(){
																store.clearFilter(true);
																store.loadData(myData);
															}
														},'-',
														{ xtype: 'button',icon:'resources/images/icon_myevents.png', text: '',tooltip: {text:'My Outages'}},'-',
														{ xtype: 'button',icon:'resources/images/recent_icon.png', text: '',tooltip: {text:'Recent'}},'-',
														{ xtype: 'button',icon:'resources/images/favorite_icon.png', text: '', tooltip: {text:'Favourites'} },'-',
														{ xtype: 'button',icon:'resources/images/exp_settings_icon.png', text: '', tooltip: {text:'My Preferences'} }
													],
													columns:[
														{
															text: '&nbsp;',
															flex: .2,
															sortable: true,
															dataIndex: 'itemQty',
															align: 'center',
															renderer: function(val)
															{
																var newVal='';
																if(val.toUpperCase().trim()=='CS ERP')
																	{
																		newVal = '<img src="resources/images/csSource.png" title="'+val+'" height="10" width="10">'
																	}
																else if(val.toUpperCase().trim()=='FS ERP')
																	{
																		newVal = '<img src="resources/images/txSource.png" title="'+val+'" height="10" width="10">'
																	}
																return newVal;
															}
														},{
															text: 'Outage ID',
															flex: .6,
															dataIndex: 'eventID',
															sortable: true,
															align: 'left', 
															renderer: function(val)
															{
																val = '<u>'+val+'</u>';
																return val;
															}
														},{
															text: 'Action Items',
															flex: .4,
															dataIndex: 'actionItem',
															sortable: true,
															align: 'left',
															renderer: function(val)
															{
																if(val)
																{
																	val = '<img src="resources/images/reporting.gif" height="20" width="20">'+'('+val+')';
																}
																else
																{
																	val = '<img src="resources/images/reporting.gif" height="20" width="20">';
																}
																return val;
															}
														},{
															text: 'Site Names',
															flex: .5,
															dataIndex: 'siteNames',
															sortable: true,
															align: 'left'
														},{
															text: 'ESN',
															flex: .5,
															dataIndex: 'esn',
															sortable: true,
															align: 'left'
														},{
															text: 'Planned Start Date',
															flex: .5,
															dataIndex: 'plannedStartDate',
															sortable: true,
															align: 'left'
														},{
															text: 'Planned End Date',
															flex: .5,
															dataIndex: 'plannedEndDate',
															sortable: true,
															align: 'left'
														},
														{
															text: 'Status',
															flex: .5,
															dataIndex: 'status',
															hidden:true,
															sortable: true,
															align: 'left'
														}
													]
												},
												{
													xtype:'panel',
													height:20
												},
												{
													xtype:'button',
													id:'removeFavBtn',
													text: 'Remove From Favourites'
												}
										]
						
									}
								]
							},{
								title: 'Sites',
								layout:'fit',
								itmIndex : 1
							}
					]
				}]
			},
			
			]
		}];
		
		this.callParent(arguments);
		
	}
	
	
	
});     


